#!/usr/bin/env node

/**
 *  module dependencies
 */

var program = require('commander')
  , expose = require ('../lib/expose-me')
  , log = require('../lib/utils/log')
  , path = require ('path')
  , pkg = require ('../package.json')
  , version = pkg.version
  , os = require('os')
  , fs = require('fs');


//command line interpretation

program
  .version(version)
  .usage('[option] [config_name]')
  .option('--init', 'create a deployment template')
  .option('-p, --path [path]', 'define a path to the project');

program.on('--help',function () {
  console.log('  Examples');
  console.log('');
  console.log('    $ expose-me    // equals: $ empose-me default');
  console.log('');
  console.log('');
});

program.parse(process.argv);


//project path

var project = path.resolve(program.path || '.');


//end of line

var eol = os.EOL;



//epose-me.json configuration file

var config_name = program.args.shift() || 'default';

var config_file = 'expose-me.json';

var config_template = [
    '{'
  , '  "default": {'
  , '    "servername": "www.example.com",'
  , '    "language": "php",'
  , '    "cmd_deploy_before": "./clean.sh",'
  , '    "cmd_deploy_after": "./configure.sh nobody",'
  , '    "servers": [{'
  , '      "host": "example.com",'
  , '      "type": "apache",'
  , '      "port": 22,'
  , '      "username": "admin",'
  , '      "password": "password",'
  , '      "path": "public_html/"'
  , '    }]'
  , '  }'
  , '}'
  , ''
].join(eol);


//run expose-me

(function exposeMe() {
  if(program.init)
    generateExposeMeFile();
  else
    runExposeMe();
})();



//create the config file (expose-me.json)

function generateExposeMeFile() {
  var exposeMeFile = path.resolve(project,config_file);
  fs.writeFile(exposeMeFile, config_template,function (err){
    if(err){
      console.log(err);
      log.error('init','expose-me.json was not created');
    }
    log.info('init','expose-me.json was created');
  });
}



function runExposeMe() {

}